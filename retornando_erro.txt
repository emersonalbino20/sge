export const useCreateTurno = () => {
  const queryClient = useQueryClient();
  const [error, setError] = useState({ message: '', field: '' });

  const { mutate, isLoading } = useMutation({
    mutationFn: (newTurno) => axios.post("http://localhost:8000/api/turnos/", newTurno),
    onSuccess: () => {
      queryClient.invalidateQueries(['turnos']);
      setError({ message: '', field: '' });
    },
    onError: (error) => {
      if (error.response?.data?.errors) {
        // Se a API retorna erros espec√≠ficos por campo
        const firstError = error.response.data.errors[0];
        setError({
          message: firstError.message,
          field: firstError.field
        });
      } else {
        setError({
          message: error.response?.data?.message || 'Erro ao criar turno',
          field: ''
        });
      }
    }
  });

  return { createTurno: mutate, isLoading, error };
};
